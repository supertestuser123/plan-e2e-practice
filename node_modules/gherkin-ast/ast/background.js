"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Background = void 0;
const common_1 = require("../common");
const element_1 = require("./element");
const step_1 = require("./step");
const debug_1 = require("../debug");
const debug = (0, debug_1.getDebugger)("Background");
/**
 * Model for Background
 */
class Background extends element_1.Element {
    static parse(obj, comments) {
        var _a, _b, _c, _d, _e;
        debug("parse(obj: %o, comments: %d)", obj, (_a = comments === null || comments === void 0 ? void 0 : comments.comments) === null || _a === void 0 ? void 0 : _a.length);
        if (!obj || !obj.background) {
            throw new TypeError("The given object is not a Background!");
        }
        const { keyword, name, description, steps, location } = obj.background;
        const background = new Background(keyword, name, description);
        background.precedingComment = comments === null || comments === void 0 ? void 0 : comments.parseComment(location);
        background.steps = step_1.Step.parseAll(steps, comments);
        background.descriptionComment = comments === null || comments === void 0 ? void 0 : comments.parseCommentBetween(location, (_b = steps === null || steps === void 0 ? void 0 : steps[0]) === null || _b === void 0 ? void 0 : _b.location);
        debug("parse(this: {keyword: '%s', name: '%s', description: '%s', step: %d, precedingComment: '%s', descriptionComment: '%s'})", background.keyword, background.name, background.description, (_c = background.steps) === null || _c === void 0 ? void 0 : _c.length, (_d = background.precedingComment) === null || _d === void 0 ? void 0 : _d.text, (_e = background.descriptionComment) === null || _e === void 0 ? void 0 : _e.text);
        return background;
    }
    clone() {
        var _a, _b, _c;
        debug("clone(this: {keyword: '%s', name: '%s', description: '%s', step: %d, precedingComment: '%s', descriptionComment: '%s'})", this.keyword, this.name, this.description, (_a = this.steps) === null || _a === void 0 ? void 0 : _a.length, (_b = this.precedingComment) === null || _b === void 0 ? void 0 : _b.text, (_c = this.descriptionComment) === null || _c === void 0 ? void 0 : _c.text);
        const background = new Background(this.keyword, this.name, this.description);
        background.steps = (0, common_1.cloneArray)(this.steps);
        background.precedingComment = this.precedingComment ? this.precedingComment.clone() : null;
        background.descriptionComment = this.descriptionComment ? this.descriptionComment.clone() : null;
        return background;
    }
}
exports.Background = Background;
//# sourceMappingURL=background.js.map