import { GherkinCommentHandler } from "../common";
import { GherkinTag } from "../gherkinObject";
import { Comment } from "./comment";
import { UniqueObject } from "./uniqueObject";
/**
 * Model for Tag
 */
export declare class Tag extends UniqueObject {
    static parse(obj: GherkinTag, comments?: GherkinCommentHandler): Tag;
    static parseAll(obj: GherkinTag[], comments?: GherkinCommentHandler): Tag[];
    static parseString(s?: string): Tag;
    /** The name of the tag, e.g. "suite" from "@suite(smoke)" */
    name: string;
    /** The value of the tag, e.g. "smoke" from "@suite(smoke)" */
    value: string;
    /** The comment of the tag */
    comment: Comment;
    constructor(name: string, value?: string);
    clone(): Tag;
    replace(key: RegExp | string, value: string): void;
    toString(): string;
}
export declare const tag: (name: string, value?: string) => Tag;
export declare const removeDuplicateTags: (tags: Tag[]) => Tag[];
