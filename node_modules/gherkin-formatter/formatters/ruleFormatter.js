"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.format = void 0;
const gherkin_ast_1 = require("gherkin-ast");
const lines_builder_1 = require("lines-builder");
const debug_1 = require("../debug");
const backgroundFormatter_1 = require("./backgroundFormatter");
const scenarioFormatter_1 = require("./scenarioFormatter");
const scenarioOutlineFormatter_1 = require("./scenarioOutlineFormatter");
const tagFormatter_1 = require("./tagFormatter");
const debug = (0, debug_1.getDebugger)("ruleFormatter");
function format(rule, options) {
    debug("format(rule: %s, options: %o)", rule === null || rule === void 0 ? void 0 : rule.constructor.name, options);
    if (!rule) {
        throw new Error("Rule must be set!");
    }
    const l = (0, lines_builder_1.lines)(`${rule.keyword}: ${rule.name}`);
    if (rule.precedingComment) {
        l.prepend(rule.precedingComment.text);
    }
    if (rule.tags.length > 0) {
        l.prepend((0, tagFormatter_1.format)(rule.tags, options));
    }
    if (rule.tagComment) {
        l.prepend(rule.tagComment.text);
    }
    if (rule.description) {
        l.append((0, lines_builder_1.lines)({ trimLeft: true }, rule.description));
    }
    if (rule.descriptionComment) {
        l.append(null, (0, lines_builder_1.lines)(rule.descriptionComment.text));
    }
    if (rule.elements.length > 0) {
        rule.elements.forEach((item) => {
            if (item instanceof gherkin_ast_1.Scenario) {
                l.append(null, (0, lines_builder_1.lines)((0, scenarioFormatter_1.format)(item, options)));
            }
            else if (item instanceof gherkin_ast_1.ScenarioOutline) {
                l.append(null, (0, lines_builder_1.lines)((0, scenarioOutlineFormatter_1.format)(item, options)));
            }
            else if (item instanceof gherkin_ast_1.Background) {
                l.append(null, (0, lines_builder_1.lines)((0, backgroundFormatter_1.format)(item, options)));
            }
        });
    }
    return l.toString();
}
exports.format = format;
//# sourceMappingURL=ruleFormatter.js.map