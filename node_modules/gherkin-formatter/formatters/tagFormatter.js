"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.format = void 0;
const lines_builder_1 = require("lines-builder");
const debug_1 = require("../debug");
const index_1 = require("../index");
const debug = (0, debug_1.getDebugger)("tagFormatter");
function format(tags, options) {
    debug("format(tags: %s, options: %o)", tags === null || tags === void 0 ? void 0 : tags.constructor.name, options);
    if (!tags) {
        throw new Error("Tags must be set!");
    }
    options = (0, index_1.config)(options);
    if (options.oneTagPerLine) {
        const l = (0, lines_builder_1.lines)();
        for (const tag of tags) {
            if (tag.comment) {
                l.append(tag.comment.text);
            }
            l.append(tag.toString());
        }
        return l.toString();
    }
    let ls = "";
    for (const tag of tags) {
        if (tag.comment) {
            ls += `${ls ? '\n' : ''}${tag.comment.text}\n${tag.toString()}`;
        }
        else {
            ls += `${ls ? ' ' : ''}${tag.toString()}`;
        }
    }
    return (0, lines_builder_1.lines)(ls).toString();
}
exports.format = format;
//# sourceMappingURL=tagFormatter.js.map