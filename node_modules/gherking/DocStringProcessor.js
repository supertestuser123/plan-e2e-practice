"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocStringProcessor = void 0;
const tslib_1 = require("tslib");
const Processor_1 = require("./Processor");
const debug_1 = require("./debug");
const debug = (0, debug_1.getDebugger)("DocStringProcessor");
class DocStringProcessor extends Processor_1.Processor {
    preFilter(e, p) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            debug("preFilter(hasPreDocString: %s, e: %s, p: %s)", !!this.preCompiler.preDocString, e === null || e === void 0 ? void 0 : e.constructor.name, p === null || p === void 0 ? void 0 : p.constructor.name);
            return !this.preCompiler.preDocString || (yield this.preCompiler.preDocString(e, p));
        });
    }
    postFilter(e, p) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            debug("postFilter(hasPostDocString: %s, e: %s, p: %s)", !!this.preCompiler.postDocString, e === null || e === void 0 ? void 0 : e.constructor.name, p === null || p === void 0 ? void 0 : p.constructor.name);
            return !this.preCompiler.postDocString || (yield this.preCompiler.postDocString(e, p));
        });
    }
    process(e, p) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            debug("process(hasOnDocString: %s, e: %s, p: %s)", !!this.preCompiler.onDocString, e === null || e === void 0 ? void 0 : e.constructor.name, p === null || p === void 0 ? void 0 : p.constructor.name);
            if (this.preCompiler.onDocString) {
                return this.preCompiler.onDocString(e, p);
            }
        });
    }
}
exports.DocStringProcessor = DocStringProcessor;
//# sourceMappingURL=DocStringProcessor.js.map