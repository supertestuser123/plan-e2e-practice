declare const ENTRIES: unique symbol;
/**
 * Extended implementation of Set, to support
 * objects and custom comparison logic.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set}
 */
export declare class ObjectSet<T = any> extends Set<T> {
    private [ENTRIES];
    constructor(iterable?: Iterable<T>);
    equals(a: T, b: T): boolean;
    has(needle: T): boolean;
    delete(item: T): boolean;
    add(item?: T): this;
    clear(): void;
    [Symbol.iterator](): IterableIterator<T>;
    keys(): IterableIterator<T>;
    values(): IterableIterator<T>;
    entries(): IterableIterator<[T, T]>;
    get size(): number;
    forEach(callbackfn: (value: T, value2: T, set: ObjectSet<T>) => void, thisArg?: any): void;
}
export {};
